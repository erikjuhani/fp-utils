name: Main

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  verify:
    runs-on: ubuntu-latest
    outputs:
      option: ${{ steps.module.outputs.option }}
      result: ${{ steps.module.outputs.result }}

    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: module
        with:
          filters: |
            option:
              - 'option/deno.json'
            result:
              - 'result/deno.json'

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x

      - name: Check formatting
        run: deno fmt --check

      - name: Run type checker
        run: deno task check

      - name: Run linter
        run: deno lint

      - name: Run tests
        run: deno task test

  release_option:
    needs: verify
    # if: ${{ needs.verify.outputs.option == 'true' }}
    outputs:
      release: ${{ steps.release.outputs.release }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check for version changes 
        id: release
        run: |
          git diff HEAD^ HEAD -- 'deno.json' | grep -q '+  "version":' && echo 'release=true' || echo 'release=false' >> $GITHUB_OUTPUT
        working-directory: option

  release_result:
    needs: verify
    if: ${{ needs.verify.outputs.result == 'true' }}
    outputs:
      release: ${{ steps.release.outputs.release }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: Check for version changes 
        id: release
        run: |
          git diff HEAD^ HEAD -- 'deno.json' | grep -q '+  "version":' && echo 'release=true' || echo 'release=false' >> $GITHUB_OUTPUT
        working-directory: result


  publish_option_npm:
    needs: release_option
    if: ${{ needs.release_option.outputs.release == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # The OIDC ID token is used for authentication with JSR.
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Build @fp-utils/option npm package
        run: deno task build --mod option
      - name: Publish @fp-utils/option to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: option/dist
        run: npm publish

  publish_option_jsr:
    needs: release_option
    if: ${{ needs.release_option.outputs.release == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # The OIDC ID token is used for authentication with JSR.
    steps:
      - uses: actions/checkout@v4
      - name: Publish @fp-utils/option to jsr
        working-directory: option
        run: npx jsr publish

  publish_result_npm:
    needs: release_result
    if: ${{ needs.release_option.outputs.release == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # The OIDC ID token is used for authentication with JSR.
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Build @fp-utils/result npm package
        run: deno task build --mod result
      - name: Publish @fp-utils/result to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: result/dist
        run: npm publish

  publish_result_jsr:
    needs: release_result
    if: ${{ needs.release_result.outputs.release == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write # The OIDC ID token is used for authentication with JSR.
    steps:
      - uses: actions/checkout@v4
      - name: Publish @fp-utils/result to jsr
        working-directory: result
        run: npx jsr publish

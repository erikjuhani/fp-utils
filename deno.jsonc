{
  "tasks": {
    "build": "deno run --allow-sys --allow-net --allow-ffi --allow-run --allow-write --allow-env --allow-read ./build_npm.ts",
    "test": "deno test --allow-env --allow-read",
    "format": "deno fmt --check --ignore=\"*/dist\"",
    "lint": "deno lint --ignore=\"*/dist\"",
    "typecheck": "deno task check-option && deno task check-result",
    "check-result": "deno check ./result/mod.ts ./result/result_test_types.ts ./result/result.ts && cd result && deno publish --allow-dirty --dry-run --quiet",
    "check-option": "deno check ./option/mod.ts ./option/option_test_types.ts ./option/option.ts && cd option && deno publish --allow-dirty --dry-run --quiet",
    "coverage": "deno task test --coverage=.coverage && deno coverage .coverage && rm -r .coverage",
    "bench": "deno bench --allow-env --allow-read ./option ./result",
    "up": "find . -type f -name 'deno.json*' | xargs jq -r '.imports | select(. != null) | .[] | select(. | startswith(\"jsr\")) | . | ltrimstr(\"jsr:\") | split(\"@^\") | .[0]' | xargs deno add && deno cache ./dev_deps.ts"
  },
  "imports": {
    "@deno/dnt": "jsr:@deno/dnt@^0.41.2",
    "@fp-utils/option": "./option/mod.ts",
    "@fp-utils/result": "./result/mod.ts",
    "@std/assert": "jsr:@std/assert@^0.226.0",
    "@std/cli": "jsr:@std/cli@^0.224.7",
    "@std/testing": "jsr:@std/testing@^0.225.2",
    "terser": "npm:terser@5.31.1"
  }
}
